{"version":3,"sources":["pages/PageNotFound.js","components/quotes/HighlightedQuote.module.css","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","pages/QuoteDetail.js"],"names":["PageNotFound","props","className","module","exports","HighlightedQuote","classes","quote","text","author","NewCommentForm","useHttp","addComment","sendRequest","status","error","commentTextRef","useRef","submitFormHandler","event","preventDefault","requestData","quoteId","commentData","current","value","onFinish","form","onSubmit","LoadingSpinner","control","htmlFor","id","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","getAllComments","loadedComments","data","useState","isAddingComment","setIsAddingComment","useParams","useEffect","onClick","QuoteDetail","getSingleQuote","match","useRouteMatch","path","exact","to","url"],"mappings":"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","file":"static/js/4.a9e6b257.chunk.js","sourcesContent":["const PageNotFound = (props) => {\n  return (\n    <div className=\"centered\">\n      <p>Page Not Found!</p>\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useRef, Fragment } from 'react';\n\nimport classes from './NewCommentForm.module.css';\n\nimport { addComment } from '../../lib/api';\nimport useHttp from '../../hooks/use-http';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nconst NewCommentForm = (props) => {\n  const { sendRequest, status, error } = useHttp(addComment);\n  const commentTextRef = useRef();\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const requestData = {\n      quoteId: props.quoteId,\n      commentData: { text: commentTextRef.current.value },\n    };\n    commentTextRef.current.value = '';\n    sendRequest(requestData);\n  };\n  if (status === 'completed' && !error) {\n    props.onFinish();\n  }\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className=\"centered\">\n          <LoadingSpinner></LoadingSpinner>\n        </div>\n      )}\n      {status !== 'pending' && (\n        <Fragment>\n          <div className={classes.control} onSubmit={submitFormHandler}>\n            <label htmlFor=\"comment\">Your Comment</label>\n            <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className=\"btn\">Add Comment</button>\n          </div>\n        </Fragment>\n      )}\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useEffect, useState } from 'react';\nimport useHttp from '../../hooks/use-http';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport { getAllComments } from '../../lib/api';\nimport { useParams } from 'react-router';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const {\n    sendRequest,\n    data: loadedComments,\n    status,\n    error,\n  } = useHttp(getAllComments);\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const params = useParams();\n  const quoteId = params.quoteId;\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const stopAddCommmentHandler = () => {\n    setIsAddingComment(false);\n  };\n\n  useEffect(() => {\n    if (!isAddingComment) {\n      sendRequest(quoteId);\n    }\n  }, [sendRequest, quoteId, isAddingComment]);\n\n  let comments = <p>Comments...</p>;\n  if (status === 'pending') {\n    // show loading spinner\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner></LoadingSpinner>\n      </div>\n    );\n  } else if (status === 'completed') {\n    if (!error) {\n      comments = <CommentsList comments={loadedComments}></CommentsList>;\n    } else {\n      comments = <p>Could not load comments</p>;\n    }\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm onFinish={stopAddCommmentHandler} quoteId={quoteId} />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { Fragment, useEffect } from 'react';\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\n\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport PageNotFound from './PageNotFound';\nimport Comments from '../components/comments/Comments';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\n\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\n\n// const DUMMY_QUOTES = [\n//   { id: 'q1', author: 'Sai', text: 'A quote is a quote' },\n//   { id: 'q2', author: 'Shiva', text: 'A mot is a mot' },\n// ];\n\nconst QuoteDetail = (props) => {\n  const { sendRequest, data: quote, status } = useHttp(getSingleQuote, true);\n  const match = useRouteMatch();\n  const params = useParams();\n  const { quoteId } = params;\n  // const quote = DUMMY_QUOTES.find((el) => el.id === params.quoteId);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (!quote && status === 'pending') {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner></LoadingSpinner>;\n      </div>\n    );\n  }\n  if (!quote) {\n    return <PageNotFound></PageNotFound>;\n  }\n  return (\n    <Fragment>\n      <HighlightedQuote\n        text={quote.text}\n        author={quote.author}\n      ></HighlightedQuote>\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments></Comments>\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n"],"sourceRoot":""}